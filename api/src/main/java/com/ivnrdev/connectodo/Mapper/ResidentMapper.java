package com.ivnrdev.connectodo.Mapper;

import com.ivnrdev.connectodo.DTO.Resident.ResidentRequestDTO;
import com.ivnrdev.connectodo.DTO.Resident.ResidentResponseDTO;
import com.ivnrdev.connectodo.Domain.Resident;
import org.springframework.stereotype.Component;

@Component
public class ResidentMapper implements Mapper<Resident, ResidentRequestDTO, ResidentResponseDTO> {

    @Override
    public Resident toEntity(ResidentRequestDTO request) {
        return Resident.builder()
                .firstName(request.getFirstName())
                .middleName(request.getMiddleName())
                .lastName(request.getLastName())
                .suffixName(request.getSuffixName())
                .mobileNumber(request.getMobileNumber())
                .telephoneNumber(request.getTelephoneNumber())
                .email(request.getEmail())
                .address(request.getAddress())
                .sex(request.getSex())
                .birthdate(request.getBirthdate())
                .birthplace(request.getBirthplace())
                .citizenship(request.getCitizenship())
                .occupation(request.getOccupation())
                .civilStatus(request.getCivilStatus())
                .motherTounge(request.getMotherTounge())
                .bloodType(request.getBloodType())
                .religion(request.getReligion())
                .fatherFirstName(request.getFatherFirstName())
                .fatherLastName(request.getFatherLastName())
                .fatherMiddleName(request.getFatherMiddleName())
                .fatherSuffixName(request.getFatherSuffixName())
                .fatherOccupation(request.getFatherOccupation())
                .motherFirstName(request.getMotherFirstName())
                .motherLastName(request.getMotherLastName())
                .motherMiddleName(request.getMotherMiddleName())
                .motherSuffixName(request.getMotherSuffixName())
                .motherOccupation(request.getMotherOccupation())
                .spouseFirstName(request.getSpouseFirstName())
                .spouseLastName(request.getSpouseLastName())
                .spouseMiddleName(request.getSpouseMiddleName())
                .spouseSuffixName(request.getSpouseSuffixName())
                .spouseOccupation(request.getSpouseOccupation())
                .emergencyFirstName(request.getEmergencyFirstName())
                .emergencyLastName(request.getEmergencyLastName())
                .emergencyMiddleName(request.getEmergencyMiddleName())
                .emergencyMobileNumber(request.getEmergencyMobileNumber())
                .emergencyRelationship(request.getEmergencyRelationship())
                .sourceOfIncome(request.getSourceOfIncome())
                .residencyStatus(request.getResidencyStatus())
                .status(request.getStatus())
                .educationalAttainment(request.getEducationalAttainment())
                .profileUrl(request.getProfileUrl())
                .validIdUrl(request.getValidIdUrl())
                .validIdExpiration(request.getValidIdExpiration())
                .tinIdUrl(request.getTinIdUrl())
                .tinIdNumber(request.getTinIdNumber())
                .build();
    }

    @Override
    public ResidentResponseDTO toRes(Resident entity) {
        return ResidentResponseDTO.builder()
                .id(entity.getId())
                .firstName(entity.getFirstName())
                .middleName(entity.getMiddleName())
                .lastName(entity.getLastName())
                .suffixName(entity.getSuffixName())
                .mobileNumber(entity.getMobileNumber())
                .telephoneNumber(entity.getTelephoneNumber())
                .email(entity.getEmail())
                .address(entity.getAddress())
                .sex(entity.getSex())
                .birthdate(entity.getBirthdate())
                .birthplace(entity.getBirthplace())
                .citizenship(entity.getCitizenship())
                .occupation(entity.getOccupation())
                .civilStatus(entity.getCivilStatus())
                .motherTounge(entity.getMotherTounge())
                .bloodType(entity.getBloodType())
                .religion(entity.getReligion())
                .fatherFirstName(entity.getFatherFirstName())
                .fatherLastName(entity.getFatherLastName())
                .fatherMiddleName(entity.getFatherMiddleName())
                .fatherSuffixName(entity.getFatherSuffixName())
                .fatherOccupation(entity.getFatherOccupation())
                .motherFirstName(entity.getMotherFirstName())
                .motherLastName(entity.getMotherLastName())
                .motherMiddleName(entity.getMotherMiddleName())
                .motherSuffixName(entity.getMotherSuffixName())
                .motherOccupation(entity.getMotherOccupation())
                .spouseFirstName(entity.getSpouseFirstName())
                .spouseLastName(entity.getSpouseLastName())
                .spouseMiddleName(entity.getSpouseMiddleName())
                .spouseSuffixName(entity.getSpouseSuffixName())
                .spouseOccupation(entity.getSpouseOccupation())
                .emergencyFirstName(entity.getEmergencyFirstName())
                .emergencyLastName(entity.getEmergencyLastName())
                .emergencyMiddleName(entity.getEmergencyMiddleName())
                .emergencyMobileNumber(entity.getEmergencyMobileNumber())
                .emergencyRelationship(entity.getEmergencyRelationship())
                .sourceOfIncome(entity.getSourceOfIncome())
                .residencyStatus(entity.getResidencyStatus())
                .status(entity.getStatus())
                .educationalAttainment(entity.getEducationalAttainment())
                .profileUrl(entity.getProfileUrl())
                .validIdUrl(entity.getValidIdUrl())
                .validIdExpiration(entity.getValidIdExpiration())
                .tinIdUrl(entity.getTinIdUrl())
                .tinIdNumber(entity.getTinIdNumber())
                .createdAt(entity.getCreatedAt())
                .updatedAt(entity.getUpdatedAt())
                .build();
    }

}
